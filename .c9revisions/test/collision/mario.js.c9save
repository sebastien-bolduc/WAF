{"ts":1361575973776,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1361576972170,"patch":[[{"diffs":[[1,"/**\r\n * @author      SÃ©bastien Bolduc    <sebastien.bolduc@gmail.com>\r\n * @version     0.0                 (current version number of program)\r\n * @since       2013-02-22          (the version of the package this class was first added to)\r\n */\r\n\r\n// create global namespace\r\nwindow.WAF = window.WAF || {};\r\nwindow.WAF.test = window.WAF.test || {};\r\nwindow.WAF.test.collision = window.WAF.test.collision || {};\r\n\r\n// using IIFE (Immediately-Invoked Function Expression) to give each file its own local scope\r\n(function(namespace, undefined) {\r\n    // public methods and properties\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param \r\n     * @return \r\n     */\r\n    namespace.Mario = function() {\r\n        spriteList = [];\r\n        spriteList.push(new window.WAF.game.css.graphics.SpriteImage(\"backgroundField\", \"spriteMario\", \"mario\"));\r\n        \r\n        this.x = 0;\r\n        this.y = 0;\r\n        \r\n        this.hitbox = new window.WAF.game.Rectangle(this.x, this.y, spriteList[0].width, spriteList[0].height);\r\n    };\r\n    \r\n    /**\r\n     * Draw the mario sprite.\r\n     * \r\n     * @param\r\n     * @return\r\n     */\r\n    namespace.Mario.prototype.draw = function() {\r\n        for (var i=0; i<spriteList.length; i++) {\r\n            spriteList[i].translate(this.x, this.y);\r\n            this.hitbox.translate(spriteList[i].x, spriteList[i].y);\r\n        }  \r\n    };\r\n    \r\n    // private methods and properties\r\n    var collision = window.WAF.test.collision;\r\n    var spriteList = null;\r\n    \r\n}(window.WAF.test.collision = window.WAF.test.collision || {}));"]],"start1":0,"start2":0,"length1":0,"length2":1555}]],"length":1555,"saved":false}
{"ts":1361577587232,"patch":[[{"diffs":[[0,"his.y = 0;\r\n"],[1,"        this.width = spriteList[0].width;\r\n        this.height = spriteList[0].height;\r\n"],[0,"        \r\n  "]],"start1":879,"start2":879,"length1":24,"length2":112}]],"length":1643,"saved":false}
{"ts":1361581328135,"patch":[[{"diffs":[[0," \r\n    /**\r\n"],[1,"     * Check the hitbox of the sprite for collision.\r\n     * \r\n     * @param hitboxList List of hitbox to compare to.\r\n     * @return\r\n     */\r\n    namespace.Mario.prototype.checkHitbox = function(hitboxList) {\r\n        this.hitbox.translate(this.x, this.y);\r\n        for (var i=0; i<hitboxList.length; i++) {\r\n            if (this.hitbox.intersects(hitboxList[i])) {\r\n                this.x -= x;\r\n                this.y -= y;\r\n                this.hitbox.translate(sprite.x, sprite.y);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n"],[0,"     * Draw "]],"start1":1113,"start2":1113,"length1":24,"length2":585}]],"length":2204,"saved":false}
{"ts":1361581542396,"patch":[[{"diffs":[[0,"boxList) {\r\n"],[1,"        var x = this.hitbox.x;\r\n        var y = this.hitbox.y;\r\n"],[0,"        this"]],"start1":1325,"start2":1325,"length1":24,"length2":88},{"diffs":[[0," this.x "],[-1,"-"],[0,"= x;\r\n  "]],"start1":1573,"start2":1573,"length1":17,"length2":16},{"diffs":[[0," this.y "],[-1,"-"],[0,"= y;\r\n  "]],"start1":1602,"start2":1602,"length1":17,"length2":16}]],"length":2266,"saved":false}
{"ts":1361581605796,"patch":[[{"diffs":[[0,"itbox.x;"],[1,"  // last position of hitbox"],[0,"\r\n      "]],"start1":1359,"start2":1359,"length1":16,"length2":44},{"diffs":[[0,".hitbox.y;\r\n"],[1,"        \r\n"],[0,"        this"]],"start1":1417,"start2":1417,"length1":24,"length2":34}]],"length":2304,"saved":false}
{"ts":1361581638027,"patch":[[{"diffs":[[0,"ate("],[-1,"sprite.x, sprite"],[1,"this.x, this"],[0,".y);"]],"start1":1688,"start2":1688,"length1":24,"length2":20}]],"length":2300,"saved":false}
