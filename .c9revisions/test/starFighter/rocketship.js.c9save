{"ts":1361749877406,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1361750120036,"patch":[[{"diffs":[[1,"/**\r\n * @author      SÃ©bastien Bolduc    <sebastien.bolduc@gmail.com>\r\n * @version     0.0                 (current version number of program)\r\n * @since       2013-02-24          (the version of the package this class was first added to)\r\n */\r\n\r\n// create global namespace\r\nwindow.WAF = window.WAF || {};\r\nwindow.WAF.test = window.WAF.test || {};\r\nwindow.WAF.test.starFighter = window.WAF.test.starFighter || {};\r\n\r\n// using IIFE (Immediately-Invoked Function Expression) to give each file its own local scope\r\n(function(namespace, undefined) {\r\n    // public methods and properties\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param containedByElement ID of the element this sprite is 'contained' by.\r\n     * @param rocketshipID       ID of the rocketship to handle.\r\n     * @param x                  Start position of rocketship on X axis.\r\n     * @param y                  Start position of rocketship on Y axis. \r\n     * @return \r\n     */\r\n    namespace.Rocketship = function(containedByElement, rocketshipID, x, y) {\r\n        this.parentElement = containedByElement;\r\n        this.spriteList = [];\r\n        this.spriteList.push(new window.WAF.game.css.graphics.SpriteImage(this.parentElement, rocketshipID, \"rocketship\"));\r\n        \r\n        this.id = rocketshipID;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = this.spriteList[0].width;\r\n        this.height = this.spriteList[0].height;\r\n        this.speed = 3;\r\n        this.size = 1;\r\n        this.rotation = 0;\r\n        \r\n        this.hitbox = new window.WAF.game.Rectangle(this.x, this.y, this.width, this.height);\r\n        \r\n        // set starting position of sprite\r\n        this.spriteList[0].x = this.x;\r\n        this.spriteList[0].y = this.y;\r\n    };\r\n    \r\n    /**\r\n     * Draw the rocketship sprite.\r\n     * \r\n     * @param\r\n     * @return\r\n     */\r\n    namespace.Rocketship.prototype.draw = function() {\r\n        for (var i=0; i<this.spriteList.length; i++) {\r\n            this.spriteList[i].draw();\r\n        }\r\n    };\r\n    \r\n    // private methods and properties\r\n    var starFighter = window.WAF.test.starFighter;\r\n    \r\n}(window.WAF.test.starFighter = window.WAF.test.starFighter || {}));"]],"start1":0,"start2":0,"length1":0,"length2":2182}]],"length":2182,"saved":false}
{"ts":1361750281171,"patch":[[{"diffs":[[0,"speed = "],[-1,"3"],[1,"Math.floor(Math.random()*5 + 5)"],[0,";\r\n     "]],"start1":1429,"start2":1429,"length1":17,"length2":47},{"diffs":[[0," = this.x;\r\n"],[-1,""],[0,"        this"]],"start1":1710,"start2":1710,"length1":24,"length2":24},{"diffs":[[0," \r\n    /**\r\n"],[1,"     * Update the position of the waveship.\r\n     * \r\n     * @param gameTime GameTime object to update with the function call.\r\n     * @return\r\n     */\r\n    namespace.Rocketship.prototype.update = function(gameTime) {\r\n        // move rocketship\r\n        this.y -= Math.ceil((this.speed / 16) * gameTime.elapsedGameTime);\r\n        \r\n        for (var i=0; i<this.spriteList.length; i++) {\r\n            this.spriteList[i].translate(this.x, y);\r\n            this.hitbox.translate(this.spriteList[i].x, this.spriteList[i].y);\r\n        }\r\n    };\r\n    \r\n    /**\r\n"],[0,"     * Draw "]],"start1":1773,"start2":1773,"length1":24,"length2":581}]],"length":2769,"saved":false}
{"ts":1361750317063,"patch":[[{"diffs":[[0,"this.x, "],[1,"this."],[0,"y);\r\n   "]],"start1":2215,"start2":2215,"length1":16,"length2":21}]],"length":2774,"saved":false}
{"ts":1361750336840,"patch":[[{"diffs":[[0,"the "],[-1,"wave"],[1,"rocket"],[0,"ship"]],"start1":1815,"start2":1815,"length1":12,"length2":14}]],"length":2776,"saved":false}
