{"ts":1361745355641,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1361745609421,"patch":[[{"diffs":[[1,"/**\r\n * @author      SÃ©bastien Bolduc    <sebastien.bolduc@gmail.com>\r\n * @version     0.0                 (current version number of program)\r\n * @since       2013-02-24          (the version of the package this class was first added to)\r\n */\r\n\r\n// create global namespace\r\nwindow.WAF = window.WAF || {};\r\nwindow.WAF.test = window.WAF.test || {};\r\nwindow.WAF.test.starFighter = window.WAF.test.starFighter || {};\r\n\r\n// using IIFE (Immediately-Invoked Function Expression) to give each file its own local scope\r\n(function(namespace, undefined) {\r\n    // public methods and properties\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param containedByElement ID of the element this sprite is 'contained' by.\r\n     * @param waveshipID         ID of the waveship to handle.\r\n     * @param x                  Start position of waveship on X axis.\r\n     * @param y                  Start position of waveship on Y axis. \r\n     * @return \r\n     */\r\n    namespace.Waveship = function(containedByElement, waveshipID, x, y) {\r\n        this.parentElement = containedByElement;\r\n        this.spriteList = [];\r\n        this.spriteList.push(new window.WAF.game.css.graphics.SpriteImage(this.parentElement, waveshipID, \"waveship\"));\r\n        \r\n        this.id = waveshipID;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = this.spriteList[0].width;\r\n        this.height = this.spriteList[0].height;\r\n        this.speed = 3;\r\n        this.size = 1;\r\n        this.rotation = 0;\r\n        \r\n        this.hitbox = new window.WAF.game.Rectangle(this.x, this.y, this.width, this.height);\r\n        \r\n        // set starting position of sprite\r\n        this.spriteList[0].x = this.x;\r\n        this.spriteList[0].y = this.y;\r\n    };\r\n    \r\n    /**\r\n     * Draw the waveship sprite.\r\n     * \r\n     * @param\r\n     * @return\r\n     */\r\n    namespace.Waveship.prototype.draw = function() {\r\n        for (var i=0; i<this.spriteList.length; i++) {\r\n            this.spriteList[i].draw();\r\n        }\r\n    };\r\n    \r\n    // private methods and properties\r\n    var starFighter = window.WAF.test.starFighter;\r\n    \r\n}(window.WAF.test.starFighter = window.WAF.test.starFighter || {}));"]],"start1":0,"start2":0,"length1":0,"length2":2162}]],"length":2162,"saved":false}
{"ts":1361745685165,"patch":[[{"diffs":[[0," \r\n    /**\r\n"],[1,"     * Update the position of the waveship.\r\n     * \r\n     * @param gameTime GameTime object to update with the function call.\r\n     * @return\r\n     */\r\n    namespace.Waveship.prototype.update = function(gameTime) {\r\n    }\r\n    \r\n    /**\r\n"],[0,"     * Draw "]],"start1":1727,"start2":1727,"length1":24,"length2":263}]],"length":2401,"saved":false}
{"ts":1361745757383,"patch":[[{"diffs":[[0,"ime) {\r\n    "],[-1,"}"],[1,"    // move waveship\r\n        this.x -= Math.ceil((this.speed / 16) * gameTime.elapsedGameTime);\r\n        \r\n        for (var i=0; i<this.spriteList.length; i++) {\r\n            this.spriteList[i].translate(this.x, this.y);\r\n            this.hitbox.translate(this.spriteList[i].x, this.spriteList[i].y);\r\n        }\r\n    };"],[0,"\r\n    \r\n    "]],"start1":1948,"start2":1948,"length1":25,"length2":344}]],"length":2720,"saved":false}
{"ts":1361747839450,"patch":[[{"diffs":[[0,"GameTime);\r\n"],[1,"        this.y += Math.ceil(Math.sin(this.x) * 10);\r\n"],[0,"        \r\n  "]],"start1":2046,"start2":2046,"length1":24,"length2":77}]],"length":2773,"saved":false}
{"ts":1361747863410,"patch":[[{"diffs":[[0,".x) * 10"],[1,"0"],[0,");\r\n    "]],"start1":2099,"start2":2099,"length1":16,"length2":17}]],"length":2774,"saved":false}
{"ts":1361747963316,"patch":[[{"diffs":[[0,"n(this.x"],[1," % 100"],[0,") * 100)"]],"start1":2093,"start2":2093,"length1":16,"length2":22}]],"length":2780,"saved":false}
{"ts":1361748297571,"patch":[[{"diffs":[[0,"s.x "],[-1,"% 10"],[1,"* Math.PI / 18"],[0,"0) *"]],"start1":2098,"start2":2098,"length1":12,"length2":22}]],"length":2790,"saved":false}
{"ts":1361748323256,"patch":[[{"diffs":[[0,"80) * 10"],[-1,"0"],[0,");\r\n    "]],"start1":2115,"start2":2115,"length1":17,"length2":16}]],"length":2789,"saved":false}
{"ts":1361748404142,"patch":[[{"diffs":[[0,") * "],[-1,"10"],[1,"5"],[0,");\r\n"]],"start1":2117,"start2":2117,"length1":10,"length2":9}]],"length":2788,"saved":false}
{"ts":1361748536338,"patch":[[{"diffs":[[0,"        "],[-1,"this."],[1,"var y = this.y;\r\n        "],[0,"y += Mat"]],"start1":2058,"start2":2058,"length1":21,"length2":41},{"diffs":[[0,"this.x, "],[-1,"this."],[0,"y);\r\n   "]],"start1":2253,"start2":2253,"length1":21,"length2":16}]],"length":2803,"saved":false}
{"ts":1361748555138,"patch":[[{"diffs":[[0,"180) * 5"],[1,"0"],[0,");\r\n    "]],"start1":2134,"start2":2134,"length1":16,"length2":17}]],"length":2804,"saved":false}
{"ts":1361748574741,"patch":[[{"diffs":[[0,") * "],[1,"7"],[0,"5"],[-1,"0"],[0,");\r\n"]],"start1":2137,"start2":2137,"length1":10,"length2":10}]],"length":2804,"saved":false}
{"ts":1361748696599,"patch":[[{"diffs":[[0,"speed = "],[-1,"3"],[1,"2"],[0,";\r\n     "]],"start1":1413,"start2":1413,"length1":17,"length2":17}]],"length":2804,"saved":false}
{"ts":1361748728452,"patch":[[{"diffs":[[0,"speed = "],[-1,"2"],[1,"3"],[0,";\r\n     "]],"start1":1413,"start2":1413,"length1":17,"length2":17},{"diffs":[[0,") * "],[-1,"75"],[1,"100"],[0,");\r\n"]],"start1":2137,"start2":2137,"length1":10,"length2":11}]],"length":2805,"saved":false}
{"ts":1361748861959,"patch":[[{"diffs":[[0,") * "],[-1,"100"],[1,"75"],[0,");\r\n"]],"start1":2137,"start2":2137,"length1":11,"length2":10}]],"length":2804,"saved":false}
