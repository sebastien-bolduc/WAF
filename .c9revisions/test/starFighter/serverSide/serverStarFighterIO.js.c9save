{"ts":1361923652148,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1361923693353,"patch":[[{"diffs":[[1,"/**\r\n * @author      SÃ©bastien Bolduc    <sebastien.bolduc@gmail.com>\r\n * @version     0.0                 (current version number of program)\r\n * @since       2013-02-26          (the version of the package this class was first added to)\r\n */\r\n\r\n// requires node's\r\nvar app = require('http').createServer(handler)\r\n, io = require('socket.io').listen(app)\r\n, fs = require('fs')\r\n\r\napp.listen(process.env.PORT || 8001);\r\n\r\nfunction handler (req, res) {\r\n    fs.readFile('test/starFighter/default.html',\r\n        function (err, data) {\r\n            if (err) {\r\n            res.writeHead(500);\r\n            return res.end('Error loading index.html');\r\n        }\r\n\r\n        res.writeHead(200, {'Content-Type': 'text/html', \"Content-Length\": data.length});   \r\n        res.end(data);\r\n    });\r\n}\r\n\r\nio.sockets.on('connection', function (socket) {\r\n    // echo the message\r\n    socket.on('message', function (data) {\r\n        console.info(data);\r\n        socket.send(\"[ECHO] \"+data);\r\n    });\r\n});"]],"start1":0,"start2":0,"length1":0,"length2":991}]],"length":991,"saved":false}
{"ts":1361927072157,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"io.sockets.on('connection', function (socket) {\r\n    // echo the message\r\n    socket.on('message', function (data) {\r\n        console.info(data);\r\n        socket.send(\"[ECHO] \"+data);\r\n    }"],[1,"var player = 0;\r\nvar socketBoard = [];\r\n\r\n// create the player\r\nio.sockets.on('connection', function (socket) {\r\n    socketBoard[player].push(socket);\r\n    socket.send(player++);\r\n    \r\n    socket.on('message', function (data) {\r\n        var element = data.split(\" \");\r\n        socketBoard[parseInt(element[0])].send(element[1]);\r\n    });\r\n    \r\n});\r\n\r\n// destroy the player\r\nio.socket.on('disconnect', function(socket) {\r\n    player.splice(player.indexOf(socket)"],[0,");\r\n})"],[-1,";"]],"start1":790,"start2":790,"length1":201,"length2":473}]],"length":1263,"saved":false}
{"ts":1361927333900,"patch":[[{"diffs":[[0,"++);\r\n    \r\n"],[1,"    // send message to a player\r\n"],[0,"    socket.o"]],"start1":968,"start2":968,"length1":24,"length2":57},{"diffs":[[0,"ard["],[-1,"parseInt"],[1,"Number"],[0,"(ele"]],"start1":1113,"start2":1113,"length1":16,"length2":14},{"diffs":[[0,"   });\r\n"],[-1,"    \r\n"],[0,"});\r\n\r\n/"]],"start1":1157,"start2":1157,"length1":22,"length2":16},{"diffs":[[0,"    "],[-1,"player.splice(player"],[1,"socketBoard.splice(socketBoard"],[0,".ind"]],"start1":1242,"start2":1242,"length1":28,"length2":38},{"diffs":[[0,"ocket));\r\n})"],[1,";"]],"start1":1286,"start2":1286,"length1":12,"length2":13}]],"length":1299,"saved":false}
{"ts":1361927432766,"patch":[[{"diffs":[[0,"    "],[-1,"socketBoard[Number(element[0])].send(element[1]);"],[1,"\r\n        if (socketBoard[Number(element[0])]) {\r\n            socketBoard[Number(element[0])].send(element[1]);\r\n        } else {\r\n            socket.send(\"No other player...\");\r\n        }"],[0,"\r\n  "]],"start1":1101,"start2":1101,"length1":57,"length2":196}]],"length":1438,"saved":false}
{"ts":1361927736189,"patch":[[{"diffs":[[0,"r\r\nio.socket"],[1,"s"],[0,".on('disconn"]],"start1":1331,"start2":1331,"length1":24,"length2":25}]],"length":1439,"saved":false}
{"ts":1361927857693,"patch":[[{"diffs":[[0,"cket);\r\n    "],[1,"//"],[0,"socket.send("]],"start1":938,"start2":938,"length1":24,"length2":26}]],"length":1441,"saved":false}
{"ts":1361927928500,"patch":[[{"diffs":[[0,"oard"],[-1,"[player]"],[0,".pus"]],"start1":918,"start2":918,"length1":16,"length2":8}]],"length":1433,"saved":false}
{"ts":1361927932103,"patch":[[{"diffs":[[0,");\r\n    "],[-1,"//"],[0,"socket.s"]],"start1":934,"start2":934,"length1":18,"length2":16}]],"length":1431,"saved":false}
{"ts":1361928238062,"patch":[[{"diffs":[[0,"ement[1]"],[1," + \" \" + element[2]"],[0,");\r\n    "]],"start1":1198,"start2":1198,"length1":16,"length2":35}]],"length":1450,"saved":false}
{"ts":1361928897991,"patch":[[{"diffs":[[0,"(socket));\r\n"],[1,"    player--;\r\n"],[0,"});"]],"start1":1435,"start2":1435,"length1":15,"length2":30}]],"length":1465,"saved":false}
{"ts":1361929234697,"patch":[[{"diffs":[[0,")].send("],[1,"\"position\" + "],[0,"element["]],"start1":1188,"start2":1188,"length1":16,"length2":29}]],"length":1478,"saved":false}
{"ts":1361929242964,"patch":[[{"diffs":[[0,"position"],[1," "],[0,"\" + elem"]],"start1":1197,"start2":1197,"length1":16,"length2":17}]],"length":1479,"saved":false}
{"ts":1361930949810,"patch":[[{"diffs":[[0,");\r\n"],[-1,"});\r\n\r\n"],[1,"    \r\n    "],[0,"// d"]],"start1":1325,"start2":1325,"length1":15,"length2":18},{"diffs":[[0,"the player\r\n"],[-1,"io."],[1,"    "],[0,"socket"],[-1,"s"],[0,".on('disconn"]],"start1":1350,"start2":1350,"length1":34,"length2":34},{"diffs":[[0,"tion(socket) {\r\n"],[1,"    "],[0,"    socketBoard."]],"start1":1394,"start2":1394,"length1":32,"length2":36},{"diffs":[[0,"(socket));\r\n"],[1,"    "],[0,"    player--"]],"start1":1456,"start2":1456,"length1":24,"length2":28},{"diffs":[[0,"yer--;\r\n"],[1,"    });\r\n"],[0,"});"]],"start1":1479,"start2":1479,"length1":11,"length2":20}]],"length":1499,"saved":false}
{"ts":1361931498890,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"app.listen(process.env.PORT || 8001);\r\n"],[1,"// make the server listen to this port\r\napp.listen(process.env.PORT || 8001);\r\n\r\n/**\r\n * Handle an HTTP request.\r\n * \r\n * @param req Request.\r\n * @param res Response.\r\n * @return\r\n */"],[0,"\r\nfu"]],"start1":377,"start2":377,"length1":47,"length2":191}]],"length":1643,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362112200314,"patch":[[{"diffs":[[0,"nt[0])]) {\r\n"],[1,"            switch (element[1]) {\r\n                case \"position\":\r\n        "],[0,"            "]],"start1":1279,"start2":1279,"length1":24,"length2":101},{"diffs":[[0,"element["],[-1,"1"],[1,"2"],[0,"] + \" \" "]],"start1":1431,"start2":1431,"length1":17,"length2":17},{"diffs":[[0,"ent["],[-1,"2]);"],[1,"3]);\r\n                    break;\r\n                default:\r\n                    socketBoard[Number(element[0])].send(\"message \" + element[2]);       \r\n            }"],[0,"\r\n  "]],"start1":1454,"start2":1454,"length1":12,"length2":172}]],"length":1880,"saved":false}
