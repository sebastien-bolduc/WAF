{"ts":1361200908261,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1361201647463,"patch":[[{"diffs":[[1,"/**\r\n * @author      SÃ©bastien Bolduc    <sebastien.bolduc@gmail.com>\r\n * @version     0.0                 (current version number of program)\r\n * @since       2013-02-18          (the version of the package this class was first added to)\r\n */\r\n\r\n// create global namespace\r\nwindow.WAF = window.WAF || {};\r\nwindow.WAF.input = window.WAF.input || {};\r\n\r\n// using IIFE (Immediately-Invoked Function Expression) to give each file its own local scope\r\n(function(namespace, undefined) {\r\n    // public methods and properties\r\n    /**\r\n     * Constructor.\r\n     * \r\n     * @param \r\n     * @return \r\n     */\r\n    namespace.KeyboardState = function() {\r\n        this.isKeyPressed = [256];\r\n        this.isKeyPressedOnce = [256];\r\n\r\n        for (var i=0; i<256; i++) {\r\n            this.isKeyPressed[i] = false;\r\n            this.isKeyPressedOnce[i] = false;\r\n        }\r\n        \r\n        // register callback function for keyboard event\r\n        var self = this;\r\n        document.onkeydown = function(event){self.handleKeyDown(event);};\r\n        document.onkeyup = function(event){self.handleKeyUp(event);};\r\n    };\r\n    \r\n    /**\r\n     * Put a key to true when stroke down.\r\n     * \r\n     * @param event Event relating to keyboard strokes\r\n     * @return \r\n     */\r\n    namespace.KeyboardState.prototype.handleKeyDown = function(event)\r\n    {\r\n        this.isKeyPressed[event.keyCode] = true;\r\n    };\r\n\r\n    /**\r\n     * Put a key to false when release.\r\n     * \r\n     * @param event Event relating to keyboard strokes.\r\n     * @return \r\n     */\r\n    namespace.KeyboardState.prototype.handleKeyUp = function(event)\r\n    {\r\n        this.isKeyPressed[event.keyCode] = false;\r\n    };\r\n    \r\n    /**\r\n     * Returns whether a specified key is currently being pressed.\r\n     * \r\n     * @param key Char code of the key to check.\r\n     * @return {boolean} Key pressed or not\r\n     */\r\n    namespace.KeyboardState.prototype.isKeyDown = function(key)\r\n    {\r\n        return this.isKeyPressed[key];\r\n    };\r\n\r\n    /**\r\n     * Returns whether a specified key is currently being pressed (once).\r\n     * \r\n     * @param key Char code of the key to check.\r\n     * @return {boolean} Key pressed or not\r\n     */\r\n    namespace.KeyboardState.prototype.isKeyDownOnce = function(key)\r\n    {\r\n        if (this.isKeyPressed[key] === true && this.isKeyPressedOnce[key] === false) {\r\n            this.isKeyPressedOnce[key] = true;\r\n            return true;\r\n        } else if (this.isKeyPressed[key] === false && this.isKeyPressedOnce[key] === true) {\r\n            this.isKeyPressedOnce[key] = false;\r\n            return false;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n    \r\n    // private methods and properties\r\n    var input = window.WAF.input;\r\n    \r\n}(window.WAF.input = window.WAF.input || {}));"]],"start1":0,"start2":0,"length1":0,"length2":2795}]],"length":2795,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361327636398,"patch":[[{"diffs":[[0,"window.WAF.input"],[1,"s"],[0," = window.WAF.in"]],"start1":307,"start2":307,"length1":32,"length2":33},{"diffs":[[0,"ow.WAF.input"],[1,"s"],[0," || {};\r\n\r\n/"]],"start1":331,"start2":331,"length1":24,"length2":25},{"diffs":[[0," function(event)"],[-1,"\r\n   "],[0,""],[1,""],[0," {\r\n        this"]],"start1":1315,"start2":1315,"length1":37,"length2":32},{"diffs":[[0,"n(event)"],[-1,"\r\n   "],[0,""],[1,""],[0," {\r\n    "]],"start1":1596,"start2":1596,"length1":21,"length2":16},{"diffs":[[0," = function(key)"],[-1,"\r\n   "],[0,""],[1,""],[0," {\r\n        retu"]],"start1":1910,"start2":1910,"length1":37,"length2":32},{"diffs":[[0,"ion(key)"],[-1,"\r\n   "],[0,""],[1,""],[0," {\r\n    "]],"start1":2236,"start2":2236,"length1":21,"length2":16},{"diffs":[[0,"   var input"],[1,"s"],[0," = window.WA"]],"start1":2691,"start2":2691,"length1":24,"length2":25},{"diffs":[[0,"AF.input"],[1,"s"],[0,";\r\n    \r"]],"start1":2715,"start2":2715,"length1":16,"length2":17},{"diffs":[[0,"AF.input"],[1,"s"],[0," = windo"]],"start1":2743,"start2":2743,"length1":16,"length2":17},{"diffs":[[0,"AF.input"],[1,"s"],[0," || {}))"]],"start1":2763,"start2":2763,"length1":16,"length2":17}]],"length":2781,"saved":false}
